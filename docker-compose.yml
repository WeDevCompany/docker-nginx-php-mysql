version: "3"
services:
    web:
        image: nginx:${NGINX_VERSION}
        #container_name: web
        volumes:
            - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./etc/ssl:/etc/ssl"
            - "./web:/var/www/html"
            - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
        ports:
            - "8000:80"
            - "3000:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - mysqldb
    php:
        image: php:${PHP_VERSION}
        #container_name: back
        restart: always
        volumes:
            - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./web:/var/www/html"
    mysqldb:
        #container_name: db
        image: mysql:${MYSQL_VERSION}
        container_name: ${MYSQL_HOST}
        restart: always
        env_file:
            - ".env"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        ports:
            - "8989:3306"
        volumes:
            - "./data/db/mysql:/var/lib/mysql"
    node:
        image: node:${NODE_VERSION}
        #container_name: front
        working_dir: /var/www/html/public
        restart: always
        environment:
            - NODE_ENV=${NODE_ENVIROMENT}
        ports:
            - "4040:5000"
        command: /bin/sh -c "npm install -y && npm run webpack-dev && npm start"
        volumes:
            - "./web/public:/var/www/html/public"
            - "./web/public/node_modules:/var/www/html/public/node_modules"
            - "./web/public/src:/var/www/html/public/src"
            - "./web/public/build:/var/www/html/public/build"
